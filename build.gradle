plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
    maven { url 'https://maven.nucleoid.xyz' }
	maven { url 'https://maven.tomalbrc.de' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modImplementation include("eu.pb4:polymer-core:[${project.polymer_version}]")
	modImplementation include("eu.pb4:polymer-virtual-entity:[${project.polymer_version}]")
	modImplementation include("eu.pb4:polymer-resource-pack:[${project.polymer_version}]")
	modImplementation include("eu.pb4:polymer-resource-pack-extras:[${project.polymer_version}]")
	modImplementation ("eu.pb4:polymer-autohost:${project.polymer_version}")
	modImplementation include("eu.pb4:factorytools:[${project.factorytools_version}]")
	
}

processResources {
	inputs.property "version", project.version
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "loader_version", project.loader_version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
			"minecraft_version": project.minecraft_version,
			"loader_version": project.loader_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	
	}
}
